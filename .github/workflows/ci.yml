name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: write
  pages: none
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies (bun)
        run: bun install --frozen-lockfile

      - name: Run tests with coverage
        id: tests
        continue-on-error: true
        run: bunx jest --ci --coverage --coverageDirectory=coverage --coverageReporters=lcov --coverageReporters=json-summary

      - name: Generate coverage badge (coverage-badges-cli)
        if: always()
        run: |
          mkdir -p coverage/badges
          if [ -f coverage/coverage-summary.json ]; then
            bunx coverage-badges --source coverage/coverage-summary.json --output coverage/badges/coverage.svg --style flat --jsonPath total.lines.pct || true
          fi

      - name: List published files (debug)
        if: always()
        run: |
          echo "Listing coverage directory contents:"
          ls -R coverage || true

      - name: Copy badge to repo path
        if: always() && github.ref == 'refs/heads/main'
        run: |
          mkdir -p badges
          if [ -f coverage/badges/coverage.svg ]; then
            cp coverage/badges/coverage.svg badges/coverage.svg
          fi

      - name: Fail if tests failed
        if: steps.tests.outcome == 'failure'
        run: exit 1

      - name: Commit coverage badge to repo
        if: always() && github.ref == 'refs/heads/main'
        run: |
          if [ -f badges/coverage.svg ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            if [ -n "$(git status --porcelain badges/coverage.svg)" ]; then
              git add badges/coverage.svg
              git commit -m "chore(ci): update coverage badge"
              git push
            else
              echo "No badge changes to commit."
            fi
          else
            echo "No badge to commit."


