name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies (bun)
        run: bun install --frozen-lockfile

      - name: Run tests with coverage
        id: tests
        continue-on-error: true
        run: bun run test:ci

      - name: Build coverage badge (always)
        if: always()
        run: |
          mkdir -p public/badges
          if [ -f coverage/coverage-summary.json ]; then
            pct=$(jq -r '.total.lines.pct // 0' coverage/coverage-summary.json)
          else
            pct=0
          fi
          pct_int=$(printf '%.0f' "$pct")
          color=red
          if [ "$pct_int" -ge 90 ]; then color=yellow; fi
          if [ "$pct_int" -ge 95 ]; then color=yellowgreen; fi
          if [ "$pct_int" -ge 98 ]; then color=green; fi
          if [ "$pct_int" -ge 100 ]; then color=brightgreen; fi
          curl -s "https://img.shields.io/badge/coverage-${pct_int}%-$color.svg" -o public/badges/coverage.svg

      - name: Upload Pages artifact (badge)
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Fail if tests failed
        if: steps.tests.outcome == 'failure'
        run: exit 1

  deploy-pages:
    if: always()
    needs: test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


