### Variables
@baseUrl = http://localhost:3005
@apiKey = your_ordscan_api_key_here

### Get All Resources
GET {{baseUrl}}/api/resources?page=1&limit=10
Authorization: Bearer {{apiKey}}

### Get Resource by ID
GET {{baseUrl}}/api/resources/did:btco:1908770696977240i0
Authorization: Bearer {{apiKey}}

### Get Resources by DID
GET {{baseUrl}}/api/resources/did/did:btco:1908770696977240i0
Authorization: Bearer {{apiKey}}

### Get Resource Content
GET {{baseUrl}}/api/resources/did:btco:1908770696977240i0/content
Authorization: Bearer {{apiKey}}

### Get Resource Metadata
GET {{baseUrl}}/api/resources/did:btco:1908770696977240i0/metadata
Authorization: Bearer {{apiKey}}

### Health Check
GET {{baseUrl}}/api/health

### Example Response Format
# {
#   "dids": [
#     {
#       "id": "did:btco:1908770696977240i0",
#       "inscriptionId": "1908770696977240i0",
#       "contentType": "application/json",
#       "content": {
#         "id": "did:btco:1908770696977240i0",
#         "type": "Resource"
#       }
#     }
#   ],
#   "linkedResources": [
#     {
#       "id": "did:btco:1908770696977240i0",
#       "type": "Resource",
#       "inscriptionId": "1908770696977240i0",
#       "didReference": "did:btco:1908770696977240i0",
#       "contentType": "application/json",
#       "content": {
#         "name": "Example Resource",
#         "description": "This is an example resource"
#       },
#       "sat": "1908770696977240"
#     }
#   ],
#   "page": 1,
#   "totalItems": 100,
#   "itemsPerPage": 10,
#   "error": ""
# }

### Notes
# - All endpoints except /api/health require an API key
# - The API key should be set in the Authorization header
# - Pagination is available for the /api/resources endpoint
# - Content types are automatically detected and processed
# - JSON content is automatically fetched and parsed
# - Error responses include an error message in the error field 

### Get All Resources (Paginated)
GET {{baseUrl}}/api/resources?page=1&limit=5

### Get Resource by DID (Using Correct Format Placeholder)
GET {{baseUrl}}/api/resources/did:btco:956424811897629/0

### Get Resources by DID (Correct Format Placeholder)
GET {{baseUrl}}/api/resources/did/did:btco:956424811897629/0

### Get Resource Content (Using Correct Format Placeholder)
GET {{baseUrl}}/api/resources/did:btco:956424811897629/0/content

### Get Resource Metadata (Using Correct Format Placeholder)
GET {{baseUrl}}/api/resources/did:btco:956424811897629/0/metadata

### Example Payloads (Commented Out - Updated Placeholder)
/*
POST {{baseUrl}}/api/resources/did:btco:956424811897629/0/resources
Content-Type: application/json

{
  "contentType": "application/json",
  "content": {"name": "Alice", "profile": "https://example.com/alice"}
}
*/

/*
GET {{baseUrl}}/api/resources/did:btco:956424811897629/0
Example Response (commented):
{
  "status": "success",
  "data": {
    "didDocument": {
      "@context": "https://www.w3.org/ns/did/v1",
      // "id": "did:btco:956424811897629/0", // Updated placeholder
      "verificationMethod": [ ... ],
      "service": [ ... ]
    },
    "linkedResources": [
      {
        // "id": "did:btco:956424811897629/0", // Updated placeholder
        "type": "LinkedResource",
        "contentType": "application/json",
        "content": { ... },
        "inscriptionId": "...",
        "sat": 956424811897629
      }
    ]
  }
}
*/

/*
GET {{baseUrl}}/api/resources/did:btco:956424811897629/0/content
Example Response (commented):
{
  "name": "Alice", 
  "profile": "https://example.com/alice"
}
*/

/*
GET {{baseUrl}}/api/resources/did/did:btco:956424811897629/0
Example Response (commented):
{
  "status": "success",
  "data": {
    "did": "did:btco:956424811897629/0", // Updated placeholder
    "linkedResources": [
      {
        "didReference": "did:btco:956424811897629/0", // Updated placeholder
        "inscriptionId": "...",
        "contentType": "application/json",
        "sat": 956424811897629
      }
      // ... other resources
    ]
  }
}
*/

### Get resource by DID
GET {{baseUrl}}/api/resources/did:btco:1908770696977240i0

### Get resource by DID (alternative endpoint)
GET {{baseUrl}}/api/resources/did/did:btco:1908770696977240i0

### Get resource content
GET {{baseUrl}}/api/resources/did:btco:1908770696977240i0/content

### Get resource metadata
GET {{baseUrl}}/api/resources/did:btco:1908770696977240i0/metadata

### Example response structure for any of the above:
# {
#   "status": "success",
#   "data": {
#     "resource": {
#       "id": "did:btco:1908770696977240i0",
#       "content": {
#         "type": "text/plain",
#         "data": "Hello, World!"
#       },
#       "metadata": {
#         "id": "did:btco:1908770696977240i0",
#         "created": "2023-01-01T00:00:00Z"
#       },
#       "didReference": "did:btco:1908770696977240i0",
#       "inscriptionId": "...",
#       "sat": 1234567890
#     }
#   }
# } 

### =====================================
### DID RESOLUTION ENDPOINTS (ADVANCED EXAMPLES)
### =====================================

### Resolve DID with index
GET {{baseUrl}}/api/resources/did:btco:1908770696991731/0

### Get DID Document 
GET {{baseUrl}}/api/resources/did/did:btco:1908770696991731/0

### Get content by DID and index
GET {{baseUrl}}/api/resources/did:btco:1908770696991731/0/content

### Get metadata by DID and index
GET {{baseUrl}}/api/resources/did:btco:1908770696991731/0/metadata

### Create a linked resource
POST {{baseUrl}}/api/resources/did:btco:1908770696991731/0/resources 